/* Создать представление */
CREATE OR REPLACE VIEW SCOTT.EMP_DEPT_V AS
SELECT e.ename,
       e.job,
       d.loc
  FROM SCOTT.EMP  e,
       SCOTT.DEPT d
 WHERE e.deptno = d.deptno;

-- Добавление к оператору CREATE VIEW конструкции WITH READ ONLY (ДОСТУП ТОЛЬКО ДЛЯ ЧТЕНИЯ)
-- Представление можно использовать с SELECT, INSERT, UPDATE и DELETE со всеми таблицами.

/* Удалить представление */
DROP VIEW SCOTT.EMP_DEPT_V;

/* 
  Материализованные представления обеспечивают более быстрое выполнение запросов за счет перерасчета 
и хранения результатов дорогостоящих соединений и агрегатных операций.
  При создании материализованного представления Oracle автоматически создает внутреннюю таблицу 
для хранения данных этого материализованного представления. Таким образом, материализованное 
представление будет занимать физическое место в базе данных, в то время как обычное представление — нет, 
поскольку последнее является всего лишь выводом запроса SQL. Можно делать следующие действия:
  создавать индексы на материализованном представлении;
  создавать материализованное представление на секционированной таблице;
  секционировать само материализованное представление.
*/

/* МАТЕРИАЛИЗОВАННОЕ ПРЕДСТАВЛЕНИЕ */
CREATE MATERIALIZED VIEW SCOTT.EMP_DEPT_MTV
--BUILD IMMEDIATE       -- Заполнить во время создания;
REFRESH FORCE ON DEMAND -- Обновляться по требованию используя пакет DBMS_MVIEW;
--REFRESH COMPLETE      -- Полное обновление по требованию используя пакет DBMS_MVIEW;
--REFRESH FAST          -- Автоматически обновлять представление при фиксации транзакции;
--ENABLE QUERY REWRITE  -- Разрешить оптимизатору перезаписывать запрос;
AS
SELECT DECODE(GROUPING(v.job),0,to_char(v.job),'Total') AS job,
       COUNT(v.job) AS cnt_job
  FROM SCOTT.EMP_DEPT_V v
 GROUP BY ROLLUP (v.job)
 ORDER BY cnt_job;

-------------------
JOB	   CNT_JOB
PRESIDENT        1
ANALYST	         2
MANAGER	         3
CLERK	         4
SALESMAN         4
Total	        14

/*
REFRESH COMPLETE: указывает СУБД, что при автоматическом обновлении хранимого результата 
                  он будет перевычисляться полностью путем повторения оператора SELECT, 
		  сформулированного для materialized view. Это гарантированно надежный вариант обновления.
    REFRESH FAST: указывает СУБД, что при неявном обновлении в хранимый результат будут вноситься изменения 
                  на основе информации, собранной в журналах базовых таблиц. Это более быстрый вариант.
   REFRESH FORCE: указывает СУБД выбрать режим FAST, если это возможно, иначе - COMPLETE. Это вариант по умолчанию.
*/

-- Обновление полученных данных
BEGIN
   DBMS_MVIEW.REFRESH(LIST => 'SCOTT.EMP_DEPT_MTV', METHOD => 'C'); -- (C - COMPLETE, F - FORCE)
END;
